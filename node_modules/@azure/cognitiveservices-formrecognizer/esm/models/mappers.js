/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import { __assign } from "tslib";
export var TrainSourceFilter = {
    serializedName: "TrainSourceFilter",
    type: {
        name: "Composite",
        className: "TrainSourceFilter",
        modelProperties: {
            prefix: {
                serializedName: "prefix",
                constraints: {
                    MaxLength: 128,
                    MinLength: 0
                },
                type: {
                    name: "String"
                }
            },
            includeSubFolders: {
                serializedName: "includeSubFolders",
                type: {
                    name: "Boolean"
                }
            }
        }
    }
};
export var TrainRequest = {
    serializedName: "TrainRequest",
    type: {
        name: "Composite",
        className: "TrainRequest",
        modelProperties: {
            source: {
                required: true,
                serializedName: "source",
                constraints: {
                    MaxLength: 2048,
                    MinLength: 0
                },
                type: {
                    name: "String"
                }
            },
            sourceFilter: {
                serializedName: "sourceFilter",
                type: {
                    name: "Composite",
                    className: "TrainSourceFilter"
                }
            }
        }
    }
};
export var FormDocumentReport = {
    serializedName: "FormDocumentReport",
    type: {
        name: "Composite",
        className: "FormDocumentReport",
        modelProperties: {
            documentName: {
                serializedName: "documentName",
                type: {
                    name: "String"
                }
            },
            pages: {
                serializedName: "pages",
                type: {
                    name: "Number"
                }
            },
            errors: {
                serializedName: "errors",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            status: {
                serializedName: "status",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var FormOperationError = {
    serializedName: "FormOperationError",
    type: {
        name: "Composite",
        className: "FormOperationError",
        modelProperties: {
            errorMessage: {
                serializedName: "errorMessage",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var TrainResult = {
    serializedName: "TrainResult",
    type: {
        name: "Composite",
        className: "TrainResult",
        modelProperties: {
            modelId: {
                nullable: false,
                serializedName: "modelId",
                type: {
                    name: "Uuid"
                }
            },
            trainingDocuments: {
                serializedName: "trainingDocuments",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "FormDocumentReport"
                        }
                    }
                }
            },
            errors: {
                serializedName: "errors",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "FormOperationError"
                        }
                    }
                }
            }
        }
    }
};
export var KeysResult = {
    serializedName: "KeysResult",
    type: {
        name: "Composite",
        className: "KeysResult",
        modelProperties: {
            clusters: {
                serializedName: "clusters",
                type: {
                    name: "Dictionary",
                    value: {
                        type: {
                            name: "Sequence",
                            element: {
                                type: {
                                    name: "String"
                                }
                            }
                        }
                    }
                }
            }
        }
    }
};
export var ModelResult = {
    serializedName: "ModelResult",
    type: {
        name: "Composite",
        className: "ModelResult",
        modelProperties: {
            modelId: {
                nullable: false,
                serializedName: "modelId",
                type: {
                    name: "Uuid"
                }
            },
            status: {
                serializedName: "status",
                type: {
                    name: "String"
                }
            },
            createdDateTime: {
                serializedName: "createdDateTime",
                type: {
                    name: "DateTime"
                }
            },
            lastUpdatedDateTime: {
                serializedName: "lastUpdatedDateTime",
                type: {
                    name: "DateTime"
                }
            }
        }
    }
};
export var ModelsResult = {
    serializedName: "ModelsResult",
    type: {
        name: "Composite",
        className: "ModelsResult",
        modelProperties: {
            modelsProperty: {
                serializedName: "models",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ModelResult"
                        }
                    }
                }
            }
        }
    }
};
export var InnerError = {
    serializedName: "InnerError",
    type: {
        name: "Composite",
        className: "InnerError",
        modelProperties: {
            requestId: {
                serializedName: "requestId",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var ErrorInformation = {
    serializedName: "ErrorInformation",
    type: {
        name: "Composite",
        className: "ErrorInformation",
        modelProperties: {
            code: {
                serializedName: "code",
                type: {
                    name: "String"
                }
            },
            innerError: {
                serializedName: "innerError",
                type: {
                    name: "Composite",
                    className: "InnerError"
                }
            },
            message: {
                serializedName: "message",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var ErrorResponse = {
    serializedName: "ErrorResponse",
    type: {
        name: "Composite",
        className: "ErrorResponse",
        modelProperties: {
            error: {
                serializedName: "error",
                type: {
                    name: "Composite",
                    className: "ErrorInformation"
                }
            }
        }
    }
};
export var ExtractedToken = {
    serializedName: "ExtractedToken",
    type: {
        name: "Composite",
        className: "ExtractedToken",
        modelProperties: {
            text: {
                serializedName: "text",
                type: {
                    name: "String"
                }
            },
            boundingBox: {
                serializedName: "boundingBox",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Number"
                        }
                    }
                }
            },
            confidence: {
                serializedName: "confidence",
                type: {
                    name: "Number"
                }
            }
        }
    }
};
export var ExtractedKeyValuePair = {
    serializedName: "ExtractedKeyValuePair",
    type: {
        name: "Composite",
        className: "ExtractedKeyValuePair",
        modelProperties: {
            key: {
                serializedName: "key",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ExtractedToken"
                        }
                    }
                }
            },
            value: {
                serializedName: "value",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ExtractedToken"
                        }
                    }
                }
            }
        }
    }
};
export var ExtractedTableColumn = {
    serializedName: "ExtractedTableColumn",
    type: {
        name: "Composite",
        className: "ExtractedTableColumn",
        modelProperties: {
            header: {
                serializedName: "header",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ExtractedToken"
                        }
                    }
                }
            },
            entries: {
                serializedName: "entries",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Sequence",
                            element: {
                                type: {
                                    name: "Composite",
                                    className: "ExtractedToken"
                                }
                            }
                        }
                    }
                }
            }
        }
    }
};
export var ExtractedTable = {
    serializedName: "ExtractedTable",
    type: {
        name: "Composite",
        className: "ExtractedTable",
        modelProperties: {
            id: {
                serializedName: "id",
                type: {
                    name: "String"
                }
            },
            columns: {
                serializedName: "columns",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ExtractedTableColumn"
                        }
                    }
                }
            }
        }
    }
};
export var ExtractedPage = {
    serializedName: "ExtractedPage",
    type: {
        name: "Composite",
        className: "ExtractedPage",
        modelProperties: {
            number: {
                serializedName: "number",
                type: {
                    name: "Number"
                }
            },
            height: {
                serializedName: "height",
                type: {
                    name: "Number"
                }
            },
            width: {
                serializedName: "width",
                type: {
                    name: "Number"
                }
            },
            clusterId: {
                serializedName: "clusterId",
                type: {
                    name: "Number"
                }
            },
            keyValuePairs: {
                serializedName: "keyValuePairs",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ExtractedKeyValuePair"
                        }
                    }
                }
            },
            tables: {
                serializedName: "tables",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ExtractedTable"
                        }
                    }
                }
            }
        }
    }
};
export var AnalyzeResult = {
    serializedName: "AnalyzeResult",
    type: {
        name: "Composite",
        className: "AnalyzeResult",
        modelProperties: {
            status: {
                serializedName: "status",
                type: {
                    name: "String"
                }
            },
            pages: {
                serializedName: "pages",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ExtractedPage"
                        }
                    }
                }
            },
            errors: {
                serializedName: "errors",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "FormOperationError"
                        }
                    }
                }
            }
        }
    }
};
export var Word = {
    serializedName: "Word",
    type: {
        name: "Composite",
        className: "Word",
        modelProperties: {
            boundingBox: {
                required: true,
                serializedName: "boundingBox",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Number"
                        }
                    }
                }
            },
            text: {
                required: true,
                serializedName: "text",
                type: {
                    name: "String"
                }
            },
            confidence: {
                nullable: true,
                serializedName: "confidence",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "High",
                        "Low"
                    ]
                }
            }
        }
    }
};
export var Line = {
    serializedName: "Line",
    type: {
        name: "Composite",
        className: "Line",
        modelProperties: {
            boundingBox: {
                serializedName: "boundingBox",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Number"
                        }
                    }
                }
            },
            text: {
                serializedName: "text",
                type: {
                    name: "String"
                }
            },
            words: {
                serializedName: "words",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Word"
                        }
                    }
                }
            }
        }
    }
};
export var TextRecognitionResult = {
    serializedName: "TextRecognitionResult",
    type: {
        name: "Composite",
        className: "TextRecognitionResult",
        modelProperties: {
            page: {
                serializedName: "page",
                type: {
                    name: "Number"
                }
            },
            clockwiseOrientation: {
                serializedName: "clockwiseOrientation",
                type: {
                    name: "Number"
                }
            },
            width: {
                serializedName: "width",
                type: {
                    name: "Number"
                }
            },
            height: {
                serializedName: "height",
                type: {
                    name: "Number"
                }
            },
            unit: {
                nullable: true,
                serializedName: "unit",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "pixel",
                        "inch"
                    ]
                }
            },
            lines: {
                required: true,
                serializedName: "lines",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Line"
                        }
                    }
                }
            }
        }
    }
};
export var ElementReference = {
    serializedName: "elementReference",
    type: {
        name: "Composite",
        className: "ElementReference",
        modelProperties: {
            ref: {
                serializedName: "$ref",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var FieldValue = {
    serializedName: "fieldValue",
    type: {
        name: "Composite",
        polymorphicDiscriminator: {
            serializedName: "valueType",
            clientName: "valueType"
        },
        uberParent: "FieldValue",
        className: "FieldValue",
        modelProperties: {
            text: {
                serializedName: "text",
                type: {
                    name: "String"
                }
            },
            elements: {
                serializedName: "elements",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ElementReference"
                        }
                    }
                }
            },
            valueType: {
                required: true,
                serializedName: "valueType",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var UnderstandingResult = {
    serializedName: "understandingResult",
    type: {
        name: "Composite",
        className: "UnderstandingResult",
        modelProperties: {
            pages: {
                serializedName: "pages",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Number"
                        }
                    }
                }
            },
            fields: {
                serializedName: "fields",
                type: {
                    name: "Dictionary",
                    value: {
                        type: {
                            name: "Composite",
                            className: "FieldValue"
                        }
                    }
                }
            }
        }
    }
};
export var ReadReceiptResult = {
    serializedName: "readReceiptResult",
    type: {
        name: "Composite",
        className: "ReadReceiptResult",
        modelProperties: {
            status: {
                nullable: false,
                serializedName: "status",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Not Started",
                        "Running",
                        "Failed",
                        "Succeeded"
                    ]
                }
            },
            recognitionResults: {
                serializedName: "recognitionResults",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "TextRecognitionResult"
                        }
                    }
                }
            },
            understandingResults: {
                serializedName: "understandingResults",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "UnderstandingResult"
                        }
                    }
                }
            }
        }
    }
};
export var StringValue = {
    serializedName: "stringValue",
    type: {
        name: "Composite",
        polymorphicDiscriminator: FieldValue.type.polymorphicDiscriminator,
        uberParent: "FieldValue",
        className: "StringValue",
        modelProperties: __assign(__assign({}, FieldValue.type.modelProperties), { value: {
                serializedName: "value",
                type: {
                    name: "String"
                }
            } })
    }
};
export var NumberValue = {
    serializedName: "numberValue",
    type: {
        name: "Composite",
        polymorphicDiscriminator: FieldValue.type.polymorphicDiscriminator,
        uberParent: "FieldValue",
        className: "NumberValue",
        modelProperties: __assign(__assign({}, FieldValue.type.modelProperties), { value: {
                serializedName: "value",
                type: {
                    name: "Number"
                }
            } })
    }
};
export var ComputerVisionError = {
    serializedName: "ComputerVisionError",
    type: {
        name: "Composite",
        className: "ComputerVisionError",
        modelProperties: {
            code: {
                required: true,
                serializedName: "code",
                type: {
                    name: "Object"
                }
            },
            message: {
                required: true,
                serializedName: "message",
                type: {
                    name: "String"
                }
            },
            requestId: {
                serializedName: "requestId",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var ImageUrl = {
    serializedName: "ImageUrl",
    type: {
        name: "Composite",
        className: "ImageUrl",
        modelProperties: {
            url: {
                required: true,
                serializedName: "url",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var BatchReadReceiptHeaders = {
    serializedName: "batchreadreceipt-headers",
    type: {
        name: "Composite",
        className: "BatchReadReceiptHeaders",
        modelProperties: {
            operationLocation: {
                serializedName: "operation-location",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var BatchReadReceiptInStreamHeaders = {
    serializedName: "batchreadreceiptinstream-headers",
    type: {
        name: "Composite",
        className: "BatchReadReceiptInStreamHeaders",
        modelProperties: {
            operationLocation: {
                serializedName: "operation-location",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var discriminators = {
    'fieldValue': FieldValue,
    'FieldValue.stringValue': StringValue,
    'FieldValue.numberValue': NumberValue
};
//# sourceMappingURL=mappers.js.map